// Generated by CoffeeScript 1.9.2
(function() {
  var data, setup, should;

  should = require('should');

  setup = require('../../setup');

  data = require('./data');

  describe('If', function() {
    this.beforeEach(function() {
      return setup(this, data);
    });
    it("should return the correct value when the expression is true", function() {
      return this.exp.exec(this.ctx.withParameters({
        "var": true
      })).should.equal("true return");
    });
    return it("should return the correct value when the expression is false", function() {
      return this.exp.exec(this.ctx.withParameters({
        "var": false
      })).should.equal("false return");
    });
  });

  describe('Case', function() {
    this.beforeEach(function() {
      return setup(this, data);
    });
    it("should be able to execute a standard case statement", function() {
      var i, item, len, results, vals;
      vals = [
        {
          "x": 1,
          "y": 2,
          "message": "X < Y"
        }, {
          "x": 2,
          "y": 1,
          "message": "X > Y"
        }, {
          "x": 1,
          "y": 1,
          "message": "X == Y"
        }
      ];
      results = [];
      for (i = 0, len = vals.length; i < len; i++) {
        item = vals[i];
        this.ctx.withParameters({
          X: item.x,
          Y: item.y
        });
        results.push(this.standard.exec(this.ctx).should.equal(item.message));
      }
      return results;
    });
    return it("should be able to execute a selected case statement", function() {
      var i, item, len, results, vals;
      vals = [
        {
          "var": 1,
          "message": "one"
        }, {
          "var": 2,
          "message": "two"
        }, {
          "var": 3,
          "message": "?"
        }
      ];
      results = [];
      for (i = 0, len = vals.length; i < len; i++) {
        item = vals[i];
        this.ctx.withParameters({
          "var": item["var"]
        });
        results.push(this.selected.exec(this.ctx).should.equal(item.message));
      }
      return results;
    });
  });

}).call(this);

//# sourceMappingURL=test.js.map
