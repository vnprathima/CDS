// Generated by CoffeeScript 1.9.2
(function() {
  var Code, Concept, DateTime, Quantity, data, ref, setup, should;

  should = require('should');

  setup = require('../../setup');

  data = require('./data');

  DateTime = require('../../../lib/datatypes/datetime').DateTime;

  ref = require('../../../lib/datatypes/clinical'), Code = ref.Code, Concept = ref.Concept;

  Quantity = require('../../../lib/elm/quantity').Quantity;

  describe('Instance', function() {
    this.beforeEach(function() {
      return setup(this, data);
    });
    it('should be able to construct a Quantity', function() {
      var q;
      q = this.quantityA.exec(this.ctx);
      q.should.be["instanceof"](Quantity);
      q.unit.should.eql('a');
      q.value.should.eql(12);
      q.toString().should.equal('12 \'a\'');
      return this.val.exec(this.ctx).should.eql(12);
    });
    it('should be able to construct a Code', function() {
      var c;
      c = this.codeA.exec(this.ctx);
      c.should.be["instanceof"](Code);
      c.code.should.equal('12345');
      c.system.should.equal('http://loinc.org');
      c.version.should.equal('1');
      return c.display.should.equal('Test Code');
    });
    it('should be able to construct a Concept', function() {
      var c;
      c = this.conceptA.exec(this.ctx);
      c.should.be["instanceof"](Concept);
      c.codes.should.have.length(1);
      c.codes[0].code.should.equal('12345');
      c.codes[0].system.should.equal('http://loinc.org');
      c.codes[0].version.should.equal('1');
      c.codes[0].display.should.equal('Test Code');
      return c.display.should.equal('Test Concept');
    });
    return it('should create generic json objects with the correct key values', function() {
      this.med.exec(this.ctx).isBrand.should.eql(false);
      return this.med.exec(this.ctx).name.should.eql("Best Med Ever");
    });
  });

}).call(this);

//# sourceMappingURL=test.js.map
