// Generated by CoffeeScript 1.9.2
(function() {
  var CodeService, Context, Executor, Library, PatientContext, PatientSource, PopulationContext, ref;

  ref = require('../lib/cql'), Library = ref.Library, Context = ref.Context, PatientSource = ref.PatientSource, CodeService = ref.CodeService, PatientContext = ref.PatientContext, PopulationContext = ref.PopulationContext, Executor = ref.Executor;

  module.exports = function(test, data, patients, valuesets, parameters, repository) {
    var cservice, e, k, psource, ref1, ref2, results, v;
    if (patients == null) {
      patients = [];
    }
    if (valuesets == null) {
      valuesets = {};
    }
    if (parameters == null) {
      parameters = {};
    }
    if (repository == null) {
      repository = null;
    }
    try {
      test.lib = new Library(data[test.test.parent.title], repository);
      cservice = new CodeService(valuesets);
      psource = new PatientSource(patients);
      test.ctx = new PatientContext(test.lib, psource.currentPatient(), cservice, parameters);
      test.executor = new Executor(test.lib, cservice, parameters);
      test.patientSource = psource;
      ref1 = test.lib.valuesets;
      for (k in ref1) {
        v = ref1[k];
        test[k[0].toLowerCase() + k.slice(1)] = v;
      }
      ref2 = test.lib.expressions;
      results = [];
      for (k in ref2) {
        v = ref2[k];
        results.push(test[k[0].toLowerCase() + k.slice(1)] = v.expression);
      }
      return results;
    } catch (_error) {
      e = _error;
      e.message = '[' + test.test.parent.title + '] ' + e.message;
      throw e;
    }
  };

}).call(this);

//# sourceMappingURL=setup.js.map
